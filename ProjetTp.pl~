ligne(2, metro, [
		 [nation, 0],
		 [avron, 1],
		 [alexandre_dumas,2],
		 [philippe_auguste,1],
		 [pere_lachaise,2],
		 [menilmontant,2],
		 [couronnes,1],
		 [belleville,2],
		 [colonel_fabien,1],
		 [jaures,1],
		 [stalingrad,2],
		 [la_chapelle,1],
		 [barbes_rochechouart,3],
		 [anvers,2],
		 [pigalle,1],
		 [blanche,2],
		 [place_clichy,3],
		 [rome,2],
		 [villiers,3],
		 [monceau,2],
		 [courcelles,2],
		 [ternes,3],
		 [charles_de_gaulle_etoile,3],
		 [victor_hugo,2],
		 [porte_dauphine,3],[porte_lilas,0]
		 ], [[5,0],2,[1,45]], [[5,15],2,[1,55]]
).

ligne(3, metro, [
		 [pont_levallois_becon,0],
		 [anatole_france,2],
		 [louise_michel,3],
		 [porte_de_champerret,2],
		 [pereire,2],
		 [wagram,2],
		 [malesherbes,3],
		 [villiers,2],
		 [europe,3],
		 [saint_lazare,4],
		 [havre_caumartin,2],
		 [opera,3],
		 [quatre_septembre,3],
		 [bourse,2],
		 [sentier,3],
		 [reaumur_sebastopol,3],
		 [arts_metiers,3],
		 [temple,2],
		 [republique,3],
		 [parmentier,2],
		 [rue_saint_maur,3],
		 [pere_lachaise,4],
		 [gambetta,2],
		 [porte_de_bagnolet,3],
		 [gallieni,3]
		 ], [[5,35],4,[0,20]], [[5,30],4,[0,20]]
).

ligne(bis_3, metro, [
		    [porte_lilas,0],
		    [saint_fargeau,2],
		    [pelleport,1],
		    [gambetta, 2]
		    ], [[6,0],7,[23,45]], [[6,10],7,[23,55]]
).

ligne(5, metro, [
		 [bobigny_pablo_picasso, 0],
		 [bobigny_pantin, 2],
		 [eglise_de_pantin, 3],
		 [hoche,4],
		 [porte_pantin,3],
		 [ourcq,4],
		 [laumiere,3],
		 [jaures,3],
		 [stalingrad,2],
		 [gare_du_nord,3],
		 [gare_de_est,1],
		 [jacques_bonsergent,2],
		 [republique,3],
		 [oberkampf,2],
		 [richard_lenoir,2],
		 [breguet_sabin,2],
		 [bastille,2],
		 [quai_de_la_rapee,3],
		 [gare_austerlitz,2],
		 [saint_marcel,3],
		 [campo_formio,2],
		 [place_italie,3]
		], [[5,24],3,[1,20]], [[5,30],3,[1,0]]
).

ligne(bis_7, metro, [
		    [pre_saint_gervais,0],
		    [place_fetes, 3],
		    [danube, 0],
		    [bolivar, 2],
		    [buttes_chaumont, 2],
		    [botzaris, 2],
		    [jaures, 3],
		    [louis_blanc,2]
		    ], [[5,35],8,[0,0]], [[5,50],8,[23,45]]
).

ligne(11, metro, [
                   [mairie_lilas, 0],
                   [porte_lilas, 3],
                   [telegraphe,1],
                   [place_fetes,1],
                   [jourdain, 1],
                   [pyrenees, 1],
                   [belleville, 2],
                   [goncourt, 2],
                   [republique, 3],
                   [arts_metiers, 2],
                   [rambuteau, 1],
                   [hotel_de_ville, 1],
                   [chatelet, 1]
                   ], [[5,15],5,[1,30]], [[5,0],5,[2,0]]
).
calcDist([], 0).
calcDist([[_|V]|T], S):-
    calcDist(T, Subtotal),
    S is Subtotal + V.
calcmaxDist(Ligne,S):-
    getArrets(Ligne,X),
    calcDist(X,S).
addh([X1,Y1],M,[X2,Y2]):-
    Y is Y1 + M,
    I is Y div 60,
    Y2 is Y mod 60,
    X2 is X1 + I.
getArrets(Ligne, X):-
    ligne(Ligne,_,X,_,_).
getDep(Ligne, X,Y,Z):-
    ligne(Ligne,_,_,[X,Y,Z],_).

lig(Arret1, Arret2, Ligne):-
    getArrets(Ligne, Arrets),
    membre(Arret1, Arrets, T),
    membre(Arret2, T, _).
membre(Arret1, [[Arret1|_]|T], T).
membre(Arret1, [[_|_]|T], T1):-
    membre(Arret1, T, T1).
convertMin([H|T], R):-
    R is H*60 + T.
closestDepart([], _, _,_, Ligne,Ligne).
closestDepart([[H|[I|[Nom|_]]]|T], Horaire, LigneAct, DAct,NomAct,Ligne):-
    convertMin(H,M),
    convertMin(Horaire,MH),
    (   MH > M
    ->  R is (abs(MH - M) div I)+1,
        S is R*I + M,
        D is abs(MH-S)
    ;   D is abs(MH-M)
    ),
    (   D < DAct
    ->  closestDepart(T, Horaire, H, D, Nom, Ligne)
    ;  closestDepart(T, Horaire, LigneAct, DAct, NomAct,Ligne)).
closestArrive([], _, _,_, Ligne,Ligne).
closestArrive([[H|[I|[Nom|_]]]|T], Horaire, LigneAct, DAct,NomAct,Ligne):-
    convertMin(H,M),
    calcmaxDist(Nom,S1),
    MFin is M + S1,
    convertMin(Horaire,MH),
    (   MFin > MH
    ->  R is (abs(MFin - MH) div I)+1,
        S is abs(MFin - R*I),
        D is abs(S-MH)
    ;   D is abs(MH-MFin)
    ),
    (   D < DAct
    ->  closestArrive(T, Horaire, H, D, Nom, Ligne)
    ;  closestArrive(T, Horaire, LigneAct, DAct, NomAct,Ligne)).

ligtot(Arret1, Arret2, Ligne, Horaire):-
        findall([D,I,L],
                (
                   getDeps(Arret1, Arret2, L, D, I, _)
                 )
               ,ListM),
        closestDepart(ListM,Horaire,_, 100000,_,Ligne).
ligtard(Arret1, Arret2, Ligne, Horaire):-
        findall([A,I,L],
                (
                   getDeps(Arret1, Arret2, L, _, I, A)
                 )
               ,ListM),
        closestArrive(ListM,Horaire,_, 100000,_,Ligne).

getDeps(Arret1, Arret2, Ligne, D , I, A) :-
    lig(Arret1, Arret2, Ligne),
    getDep(Ligne, D, I, A).
nomLine([], []).
nomLine([[X|_]|T], [X|L]) :-
    nomLine(T, L).
test(X,L):-
    member(X,L).
